// python -m grpc_tools.protoc -Iproto --python_out=. --pyi_out=. --grpc_python_out=. chatapp.proto
syntax = "proto3";

package chatapp;

// Chat app service definition.
service ChatApp {
  rpc createAccount (Account) returns (ServerReply) {};
  rpc logIn (Account) returns (LoginReply) {};
  rpc listAccounts (Empty) returns (ServerReply) {};
  rpc filterAccounts (FilterString) returns (ServerReply) {};
  rpc sendMessage (Message) returns (ServerReply) {};
  rpc deleteAccount (Account) returns (ServerReply) {};
  rpc listenForMessages (Account) returns (stream Message) {};
  rpc listenForReplies (Empty) returns (stream ServerReply) {};
}

// All information used in storing an account.
message Account {
  string username = 1;
}

// Response from the server.
message ServerReply {
  string message = 1;
}

// Used for RPCs that don't require an input.
message Empty {}

// Message format.
message Message {
  string senderName = 1;
  string message = 2;
  string recipientName = 3;
}

// String to filter by.
message FilterString {
  string filter = 1;
}

// Response sent to client after requesting a login.
message LoginReply {
  bool success = 1;
  string message = 2;
  string username = 3;
}